{"version":3,"file":"marcreichel-angular-carousel.mjs","sources":["../../../projects/angular-carousel/src/lib/slide.directive.ts","../../../projects/angular-carousel/src/lib/carousel.component.ts","../../../projects/angular-carousel/src/lib/carousel.component.html","../../../projects/angular-carousel/src/lib/carousel.module.ts","../../../projects/angular-carousel/src/marcreichel-angular-carousel.ts"],"sourcesContent":["import {Directive, TemplateRef} from \"@angular/core\";\n\n@Directive({\n  selector: '[angularCarouselSlide]',\n})\nexport class CarouselSlideDirective {\n  constructor(public template: TemplateRef<any>) {\n  }\n}\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  QueryList,\n  SimpleChanges\n} from '@angular/core';\n\nimport {CarouselSlideDirective} from \"./slide.directive\";\n\n@Component({\n  selector: 'angular-carousel',\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarouselComponent implements OnChanges, AfterContentChecked, OnDestroy {\n  @Input() public bullets: boolean = true;\n  @Input() public infinite: boolean = false;\n  @Input() public auto: boolean = false;\n  @Input() public duration: number = 5000;\n\n  @Output() public page: EventEmitter<number> = new EventEmitter<number>();\n  @Output() public previous: EventEmitter<number> = new EventEmitter<number>();\n  @Output() public next: EventEmitter<number> = new EventEmitter<number>();\n\n  @ContentChildren(CarouselSlideDirective) public slides: QueryList<CarouselSlideDirective> = new QueryList<CarouselSlideDirective>();\n\n  public currentSlide: number = 0;\n\n  private interval: number = 0;\n\n  constructor(private cdr: ChangeDetectorRef) { }\n\n  public ngAfterContentChecked(): void {\n    this.cdr.detectChanges();\n    this.currentSlide = Math.max(Math.min(this.currentSlide, this.slides.length - 1), 0);\n  }\n\n  public ngOnChanges(changes: SimpleChanges): void {\n    if (changes.auto) {\n      if (changes.auto.currentValue) {\n        this.startInterval();\n      } else {\n        this.stopInterval();\n      }\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.stopInterval();\n  }\n\n  public previousSlide($event?: MouseEvent): void {\n    if ($event) {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n    if (this.currentSlide <= 0) {\n      this.currentSlide = this.slides.length - 1;\n    } else {\n      this.currentSlide--;\n    }\n\n    this.emitPrevious();\n    this.restartInterval();\n  }\n\n  public nextSlide($event?: MouseEvent): void {\n    if ($event) {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n    if (this.currentSlide >= this.slides.length - 1) {\n      this.currentSlide = 0;\n    } else {\n      this.currentSlide++;\n    }\n\n    this.emitNext();\n    this.restartInterval();\n  }\n\n  public goToSlide(slide: number, $event?: MouseEvent): void {\n    if ($event) {\n      $event.preventDefault();\n      $event.stopPropagation();\n    }\n\n    const index = slide - 1;\n\n    if (index < 0 || index >= this.slides.length) {\n      return;\n    }\n\n    if (index === this.currentSlide) {\n      return;\n    }\n\n    this.currentSlide = index;\n    this.emitPage();\n    this.restartInterval();\n  }\n\n  public startInterval(): void {\n    if (!this.auto) {\n      return;\n    }\n    this.interval = setInterval(() => {\n      this.nextSlide();\n    }, Math.max(this.duration, 500));\n  }\n\n  public stopInterval(): void {\n    if (!this.auto) {\n      return;\n    }\n    clearInterval(this.interval);\n  }\n\n  private emitPrevious(): void {\n    this.previous.emit(this.currentSlide + 1);\n    this.emitPage();\n  }\n\n  private emitNext(): void {\n    this.next.emit(this.currentSlide + 1);\n    this.emitPage();\n  }\n\n  private emitPage(): void {\n    this.page.emit(this.currentSlide + 1);\n  }\n\n  private restartInterval(): void {\n    this.stopInterval();\n    this.startInterval();\n  }\n\n}\n","<div class=\"carousel__container\">\n  <div class=\"carousel__slider\">\n    <div *ngIf=\"infinite || currentSlide > 0\" class=\"carousel__previous\">\n      <button (click)=\"previousSlide($event)\">\n        <svg viewBox=\"0 0 20 20\">\n          <polyline points=\"12 2, 7 10, 12 18\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"2\"\n                    stroke-linecap=\"round\"\n                    fill=\"transparent\"\n                    stroke-linejoin=\"round\"></polyline>\n        </svg>\n      </button>\n    </div>\n    <ol [style.left.%]=\"currentSlide * -100\" class=\"carousel__slides\" (mouseenter)=\"stopInterval()\"\n        (mouseleave)=\"startInterval()\">\n      <li *ngFor=\"let slide of slides; let index = index\" [ngClass]=\"{'carousel__slide--active':index===currentSlide}\"\n          class=\"carousel__slide\">\n        <ng-container [ngTemplateOutlet]=\"slide.template\"></ng-container>\n      </li>\n    </ol>\n    <div *ngIf=\"infinite || currentSlide < slides.length - 1\" class=\"carousel__next\">\n      <button (click)=\"nextSlide($event)\">\n        <svg viewBox=\"0 0 20 20\">\n          <polyline points=\"8 2, 13 10, 8 18\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"2\"\n                    stroke-linecap=\"round\"\n                    fill=\"transparent\"\n                    stroke-linejoin=\"round\"></polyline>\n        </svg>\n      </button>\n    </div>\n  </div>\n  <ng-container *ngIf=\"bullets === undefined || bullets\">\n    <ol class=\"carousel__bullets\">\n      <li *ngFor=\"let slide of slides; let index = index\">\n        <button (click)=\"goToSlide(index + 1, $event)\"\n                [ngClass]=\"{'carousel__bullet--active':index===currentSlide}\"\n                class=\"carousel__bullet\">\n          <span class=\"sr-only\">{{ index + 1 }}</span>\n        </button>\n      </li>\n    </ol>\n  </ng-container>\n</div>\n","import {CommonModule} from \"@angular/common\";\nimport {NgModule} from '@angular/core';\n\nimport {CarouselComponent} from './carousel.component';\nimport {CarouselSlideDirective} from \"./slide.directive\";\n\n\n@NgModule({\n  declarations: [\n    CarouselComponent,\n    CarouselSlideDirective,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    CarouselComponent,\n    CarouselSlideDirective,\n  ]\n})\nexport class CarouselModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}
import { AfterContentChecked, ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, QueryList, SimpleChanges } from '@angular/core';
import { CarouselSlideDirective } from "./slide.directive";
import * as i0 from "@angular/core";
export declare class CarouselComponent implements OnChanges, AfterContentChecked, OnDestroy {
    private cdr;
    bullets: boolean;
    infinite: boolean;
    auto: boolean;
    duration: number;
    page: EventEmitter<number>;
    previous: EventEmitter<number>;
    next: EventEmitter<number>;
    slides: QueryList<CarouselSlideDirective>;
    currentSlide: number;
    private interval;
    constructor(cdr: ChangeDetectorRef);
    ngAfterContentChecked(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    previousSlide($event?: MouseEvent): void;
    nextSlide($event?: MouseEvent): void;
    goToSlide(slide: number, $event?: MouseEvent): void;
    startInterval(): void;
    stopInterval(): void;
    private emitPrevious;
    private emitNext;
    private emitPage;
    private restartInterval;
    static ɵfac: i0.ɵɵFactoryDeclaration<CarouselComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CarouselComponent, "angular-carousel", never, { "bullets": { "alias": "bullets"; "required": false; }; "infinite": { "alias": "infinite"; "required": false; }; "auto": { "alias": "auto"; "required": false; }; "duration": { "alias": "duration"; "required": false; }; }, { "page": "page"; "previous": "previous"; "next": "next"; }, ["slides"], never, false, never>;
}
